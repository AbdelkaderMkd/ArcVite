import{aC as o,aD as s,aF as u,eu as k,aJ as R,aH as f,hA as $,aR as g,aY as T,aL as C,ay as E,cC as G}from"./index-3572d442.js";import{o as P}from"./StreamFeatureManager-754de521.js";import{createConnection as j}from"./createConnection-f42e6974.js";import{r as x}from"./EventedSet-e6e4d476.js";import{E as U}from"./FeatureLikeLayerView3D-4fd4c894.js";import{n as V}from"./LayerView3D-e03f69d7.js";import{u as F}from"./LayerView-e8e5ef51.js";import{o as L}from"./StreamLayerView-2c8617be.js";import"./CircularArray-ef508845.js";import"./query-d78c3cab.js";import"./pbfQueryUtils-bd4b4c46.js";import"./pbf-db891cc3.js";import"./dehydratedFeatureComparison-931d5da5.js";import"./queryForSymbologySnapping-a002c83e.js";import"./hash-6f442295.js";import"./Graphics3DScaleVisibility-49953317.js";import"./optimizedFeatureQueryEngineAdapter-1f5ef20b.js";import"./PooledRBush-a9eb28cf.js";import"./popupUtils-8716dbe3.js";import"./QueryEngine-d791375a.js";import"./WhereClause-4269ed6d.js";import"./TimeOnly-b48aab9d.js";import"./timeSupport-05992e90.js";import"./projectionSupport-cd867045.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-0b94f1b2.js";import"./generateRendererUtils-6185551e.js";import"./FeatureStore-4c62ffcc.js";import"./BoundsStore-cbc79471.js";import"./heatmapTextureUtils-61534fe7.js";import"./projectExtentUtils-ed0bdcf8.js";const N=2500;let d=class extends T{getObjectId(){return this.objectId}};o([s({type:Number,json:{read:!0}})],d.prototype,"objectId",void 0),d=o([u("esri.layers.graphics.controllers.StreamGraphic")],d);let H=class{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const t=this._idToGraphic.get(e);return t?(t.sourceLayer=t.layer=null,this._idToGraphic.delete(e),t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._idToGraphic.size}},a=class extends k(R){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new x,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._clearInterval(),this.connection=f(this.connection),this.store=f(this.store),this.graphics.clear(),this.removeAllHandles()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:e,layerView:t}=this,{spatialReference:l,definitionExpression:c,geometryDefinition:p,objectIdField:h,timeInfo:_,purgeOptions:v,maxReconnectionAttempts:I,maxReconnectionInterval:w,customParameters:S}=e,b=e.geometryType?$.toJSON(e.geometryType):null,M=l,m=t.view.spatialReference,O={geometry:p,where:c};this.clear(),this._set("connection",j(e.parsedUrl,M,m,b,O,I,w,S??void 0)),this._outSpatialReference=m.toJSON(),this.store=new H(this._onUpdate.bind(this)),this.featuresManager=new P(this.store,h,_.toJSON(),v);const y="startup-watches";this.removeHandles(y),this.addHandles([e.on("send-message-to-socket",n=>this.connection.sendMessageToSocket(n)),e.on("send-message-to-client",n=>this.connection.sendMessageToClient(n)),this.connection.on("data-received",n=>this._onFeature(n)),this.connection.on("message-received",n=>this._onWebSocketMessage(n)),g(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],y),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach(t=>this.featuresManager.removeById(t.objectId))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{e.geometry==null||e.geometry.spatialReference||(e.geometry.spatialReference=this._outSpatialReference);const t=d.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){t!=null&&this.graphics.removeMany(t),e!=null&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const l=performance.now(),c=l-t;if(c>N){t=l;const p=Math.round(this._updateInfo.client/(c/1e3)),h=Math.round(this._updateInfo.websocket/(c/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:p,websocket:h})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}};o([s()],a.prototype,"isPaused",void 0),o([s({constructOnly:!0})],a.prototype,"layer",void 0),o([s({constructOnly:!0})],a.prototype,"layerView",void 0),o([s()],a.prototype,"connection",void 0),o([s({readOnly:!0})],a.prototype,"updating",null),a=o([u("esri.layers.graphics.controllers.StreamController")],a);let i=class extends L(U(V(F))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=C.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(g(()=>this.suspended,r=>{this.controller&&this._onSuspendedChange(r)}))}get connectionError(){var e,t;const r=(t=(e=this.controller)==null?void 0:e.connection)==null?void 0:t.errorString;return r?new E("stream-controller",r):null}createQuery(){return new G({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(r,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(r),e==null?void 0:e.signal)}get _streamConnectionStatus(){var r,e;return((e=(r=this.controller)==null?void 0:r.connection)==null?void 0:e.connectionStatus)??"disconnected"}createController(){return new a({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){var r;(r=this.controller)==null||r.pauseStream()}_doResume(){var r;(r=this.controller)==null||r.resumeStream()}};o([s({readOnly:!0})],i.prototype,"updatePolicy",void 0),o([s({readOnly:!0})],i.prototype,"connectionError",null),o([s()],i.prototype,"controller",void 0),o([s({readOnly:!0})],i.prototype,"hasZ",void 0),o([s({readOnly:!0})],i.prototype,"hasM",void 0),o([s({readOnly:!0})],i.prototype,"_streamConnectionStatus",null),i=o([u("esri.views.3d.layers.StreamLayerView3D")],i);const Se=i;export{Se as default};

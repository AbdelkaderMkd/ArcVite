import{a as i,b as n,c as y,l,T as d,dL as h}from"./index-bee19082.js";import{d as _}from"./FeatureSet-1e3ad43d.js";import f from"./FeatureLayerView2D-0e3ac03b.js";import{e as S}from"./util-c84f8719.js";import{d as v}from"./FeatureEffect-ec698f66.js";import"./Field-61e30cf2.js";import"./fieldType-0f702807.js";import"./Container-8602d991.js";import"./parser-a5e5dd1e.js";import"./definitions-d1f5175e.js";import"./enums-b14466b3.js";import"./Texture-6c9050a2.js";import"./Query-9eb6f731.js";import"./LayerView-5abe4ca4.js";import"./AttributeStoreView-36adb10b.js";import"./TiledDisplayObject-e0182e37.js";import"./LabelClass-973a5d40.js";import"./labelUtils-df85df77.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-59d582dc.js";import"./diffUtils-5efc4e3a.js";import"./labelingInfo-970a5843.js";import"./color-6810f97a.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-87c57817.js";import"./VertexArrayObject-a383762c.js";import"./ProgramTemplate-55b6c124.js";import"./GeometryUtils-7053339c.js";import"./heatmapUtils-08695630.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-ddfa91b8.js";import"./featureConversionUtils-de082d0e.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-1a0452bf.js";import"./ExpandedCIM-27ef7858.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-fc0bd0e1.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-ea7760bb.js";import"./floatRGBA-467f7343.js";import"./clusterUtils-98743b88.js";import"./SizeVariable-a637eb4e.js";import"./colorRamps-1e6ee6d2.js";import"./LegendOptions-7d2b0d06.js";import"./lengthUtils-184c6350.js";import"./BitmapTileContainer-a8d87959.js";import"./Bitmap-3ba75841.js";import"./TileContainer-b09b3a10.js";import"./CircularArray-ef508845.js";import"./BufferPool-be08754e.js";import"./FeatureContainer-919a6683.js";import"./commonProperties-4b40fdaa.js";import"./ElevationInfo-659cc10d.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-baad478c.js";import"./RefreshableLayerView-b1a1d827.js";import"./jsonUtils-403f1345.js";const g=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],t.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],t.prototype,"connectionStatus",null),i([n({type:v})],t.prototype,"filter",void 0),t=i([y("esri.layers.mixins.StreamLayerView")],t),t};function c(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t.toJSON()),e!=null&&(r.where=e),r}let o=class extends g(f){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([l(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),l(()=>this.layer.purgeOptions,()=>this._update()),l(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new d("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return h(e.map(p=>this.on(p,t)));const r=["data-received","message-received"].includes(e);r&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const a=super.on(e,t),s=this;return{remove(){a.remove(),r&&(s._proxy.closed||s.hasEventListener(e)||s._proxy.enableEvent(e,!1))}}}queryLatestObservations(e,t){var r,a,s;if(!((r=this.layer.timeInfo)!=null&&r.endField||(a=this.layer.timeInfo)!=null&&a.startField||(s=this.layer.timeInfo)!=null&&s.trackIdField))throw new d("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(p=>{const m=_.fromJSON(p);return m.features.forEach(u=>{u.layer=this.layer,u.sourceLayer=this.layer}),m})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var e;(e=this._proxy)==null||e.pauseStream()}_doResume(){var e;(e=this._proxy)==null||e.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(c(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(m=>m.toJSON()),a=S(e.geometryType),s=e.timeInfo&&e.timeInfo.toJSON()||null,p=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,geometryType:a,objectIdField:t,timeInfo:s,source:this.layer.parsedUrl,serviceFilter:c(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:p,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};i([n()],o.prototype,"pipelineConnectionStatus",void 0),i([n()],o.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],o.prototype,"connectionError",null),i([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=i([y("esri.views.2d.layers.StreamLayerView2D")],o);const Re=o;export{Re as default};

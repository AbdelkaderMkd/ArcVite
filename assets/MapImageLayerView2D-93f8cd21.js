import{bk as g,br as n,b2 as d,bo as l,aR as u,aC as s,aD as o,aF as c}from"./index-3572d442.js";import{a as f}from"./BitmapContainer-94ebbc2d.js";import{m as y}from"./LayerView2D-75cdb63f.js";import{r as _}from"./GraphicsView2D-42b00db6.js";import{a as H}from"./HighlightGraphicContainer-25c7a673.js";import{v as w}from"./ExportStrategy-954dbaec.js";import{u as v}from"./LayerView-e8e5ef51.js";import{p as b}from"./MapImageLayerView-1efaa45b.js";import{a as x}from"./RefreshableLayerView-13947b50.js";import{G as U}from"./MapServiceLayerViewHelper-34b42220.js";import"./WGLContainer-98654cd1.js";import"./definitions-f926d1a5.js";import"./WGLBrushVTLSymbol-4e301e2a.js";import"./vec4f32-0d1b2306.js";import"./enums-b1d611e3.js";import"./number-e491b09e.js";import"./GeometryUtils-dd03fc25.js";import"./color-5d593af9.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-1a91efd6.js";import"./MaterialKey-05dc7bce.js";import"./alignmentUtils-ae955d28.js";import"./heatmapTextureUtils-61534fe7.js";import"./Container-6f579da3.js";import"./cimAnalyzer-150a8296.js";import"./BidiEngine-9a40f2f4.js";import"./labelPoint-bb8bc683.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./normalizeUtilsSync-86570995.js";import"./projectionSupport-cd867045.js";import"./json-48e3ea08.js";import"./AttributeStoreView-4c28c213.js";import"./visualVariablesUtils-1fa1b221.js";import"./ExpandedCIM-ae1f6e0f.js";import"./util-cd4c507d.js";import"./Matcher-5a02b3c0.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-dc12a110.js";import"./ComputedAttributeStorage-a3f2b133.js";import"./TimeOnly-b48aab9d.js";import"./BaseGraphicContainer-3f2a02af.js";import"./FeatureContainer-b839d6c2.js";import"./TileContainer-5e05f4a0.js";import"./Bitmap-2db2bee0.js";import"./popupUtils-8716dbe3.js";let a=class extends b(x(y(v))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{n(e)||d.getLogger(this).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,r=e>=10.3,m=e>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new _({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new H(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new U({createFetchPopupFeaturesQueryGeometry:(h,p)=>l(h,p,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(h,p)=>{this._highlightView.graphicUpdateHandler({graphic:h,property:p})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new w({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:r,imageNormalizationSupported:m,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,r){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}fetchImageBitmap(t,i,e,r){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}highlight(t){return this._popupHighlightHelper.highlight(t)}};s([o()],a.prototype,"strategy",void 0),s([o()],a.prototype,"updating",void 0),a=s([c("esri.views.2d.layers.MapImageLayerView2D")],a);const yt=a;export{yt as default};

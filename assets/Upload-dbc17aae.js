import{aG as h,aO as w,di as y,dj as d,dk as T,bK as _,cn as g,bm as k,dl as F,aA as r,aB as u,aD as v,dm as $,dn as E,dp as P,dq as x,dg as A,dr as p,c8 as D}from"./index-80114339.js";let o=class extends h{constructor(){super({}),this._uploadTask=null}destroy(){this.cancel()}get state(){const e=this._uploadTask;return e?e.finished?e.error?w(e.error)?"canceled":"error":"success":"pending":"default"}get result(){var e;return((e=this._uploadTask)==null?void 0:e.value)??null}get error(){var e;return((e=this._uploadTask)==null?void 0:e.error)??null}uploadTo(e){this.cancel(),this._uploadTask=y(async t=>{const s=await O(e);if(d(t),s.length===0)throw T();const a=(await _(()=>import("./Mesh-9f30ea3e.js"),["assets/Mesh-9f30ea3e.js","assets/index-80114339.js","assets/index-e81f504d.css","assets/MeshGeoreferencedRelativeVertexSpace-b89241d7.js","assets/MeshLocalVertexSpace-b04029c9.js","assets/MeshTransform-7efd4efa.js","assets/georeference-fbe75c8d.js","assets/External-39f31ecc.js"])).default;d(t);const i=new g({x:0,y:0,z:0,spatialReference:e.spatialReference}),n=await a.createFromFiles(i,s,{layer:e,signal:t});if(d(t),!n)throw new k("editor:upload","could not upload or convert model");return n.load()})}cancel(){this._uploadTask=F(this._uploadTask)}};r([u()],o.prototype,"state",null),r([u()],o.prototype,"result",null),r([u()],o.prototype,"error",null),r([u()],o.prototype,"_uploadTask",void 0),o=r([v("esri.widgets.Editor.Upload")],o);let l=null;async function O(e){return"showOpenFilePicker"in window&&!l?b(e):j(e)}async function b(e){try{const t=await window.showOpenFilePicker({multiple:!0,excludeAcceptAllOption:!0,types:$(e.infoFor3D)});return Promise.all(t.map(s=>s.getFile()))}catch(t){return E(t),[]}}async function j(e){const t=P();let s;const a=document.createElement("input");a.type="file",a.multiple=!0,a.accept=x(e.infoFor3D).join(",");const i=A([p(a,"change",()=>f(n())),D(()=>clearTimeout(s)),p(document,["focus","focusin"],m),p(window,["focus","focusin"],m)]);function n(){return a.files?Array.from(a.files):[]}function f(c){i.remove(),t.resolve(c)}function m(){clearTimeout(s),s=setTimeout(()=>{if(!document.hasFocus())return;const c=n();c.length===0&&f(c)},R)}return l?l(a):a.click(),t.promise.finally(()=>i.remove())}function U(e){l=t=>{setTimeout(()=>{const s=new DataTransfer;e.forEach(a=>s.items.add(a)),t.files=s.files,t.dispatchEvent(new Event("change"))})}}function q(){l=null}const R=5e3;export{o as Upload,q as clearPromptForFilesStub,U as simulateSelectingFiles};

import{fF as b,gu as M,gD as R,gt as I,gz as D}from"./index-80114339.js";import{n as V,i as w}from"./cimAnalyzer-f75e8982.js";import{GeometryStyle as P,CIMSymbolRasterizer as $}from"./CIMSymbolRasterizer-8162ce3e.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./alignmentUtils-ae955d28.js";import"./definitions-e92533c5.js";import"./number-e491b09e.js";import"./Rect-ea14f53a.js";import"./CIMResourceManager-4d762e54.js";import"./Rasterizer-9a17dcd3.js";import"./rasterizingUtils-ae1999a5.js";import"./imageutils-5929f0f9.js";const u=new $(null,!0),c=b(M.size),x=b(M.maxSize),q=b(M.lineWidth),E=1;function k(t){const e=t==null?void 0:t.size;return typeof e=="number"?{width:e,height:e}:{width:e!=null&&typeof e=="object"&&"width"in e?e.width:null,height:e!=null&&typeof e=="object"&&"height"in e?e.height:null}}async function _(t,e={}){var F;const{node:v,opacity:S,symbolConfig:r}=e,G=r!=null&&typeof r=="object"&&"isSquareFill"in r&&r.isSquareFill,z=e.cimOptions||e,l=z.geometryType||R((F=t==null?void 0:t.data)==null?void 0:F.symbol),i=k(e),{feature:C,fieldMap:L}=z;if(i.width==null||i.height==null){const o=await V.resolveSymbolOverrides(t.data,C,null,L,l);if(!o)return null;(t=t.clone()).data={type:"CIMSymbolReference",symbol:o},t.data.primitiveOverrides=void 0;const h=[];w.fetchResources(o,u.resourceManager,h),w.fetchFonts(o,u.resourceManager,h),h.length>0&&await Promise.all(h);const n=w.getEnvelope(o,null,u.resourceManager),g=n==null?void 0:n.width,d=n==null?void 0:n.height;i.width=l==="esriGeometryPolygon"?c:l==="esriGeometryPolyline"?q:g!=null&&isFinite(g)?Math.min(g,x):c,i.height=l==="esriGeometryPolygon"?c:d!=null&&isFinite(d)?Math.max(Math.min(d,x),E):c}const p=await u.rasterizeCIMSymbolAsync(t,C,i,G||l!=="esriGeometryPolygon"?P.Preview:P.Legend,L,l);if(!p)return null;const{width:j,height:O}=p,s=document.createElement("canvas");s.width=j,s.height=O,s.getContext("2d").putImageData(p,0,0);const y=I(i.width),f=I(i.height),a=new Image(y,f);a.src=s.toDataURL(),a.ariaLabel=e.ariaLabel??null,a.alt=e.ariaLabel??"",S!=null&&(a.style.opacity=`${S}`);let m=a;if(e.effectView!=null){const o={shape:{type:"image",x:0,y:0,width:y,height:f,src:a.src},fill:null,stroke:null,offset:[0,0]};m=D([[o]],[y,f],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return v&&m&&v.appendChild(m),m}export{_ as previewCIMSymbol};

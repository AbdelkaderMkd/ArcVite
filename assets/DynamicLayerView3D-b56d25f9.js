import{iM as v,iN as E,iO as F,iP as q,iQ as W,iR as k,eI as B,eJ as p,eK as M,b_ as Q,b$ as Y,eB as J,aO as b,aQ as x,c8 as K,hy as X,b0 as D,cC as Z,cp as G,iS as ee,iT as te,dl as N,iU as ie,eD as ae,dk as H,iV as O,eF as C,eO as se,eP as U,i6 as re,iW as R,dj as V,eL as ne,iX as oe,iY as le,dH as he,aA as w,aB as S,aD as de}from"./index-80114339.js";import{n as ce}from"./LayerView3D-e129b5b0.js";import{l as ge}from"./projectExtentUtils-48350518.js";import{c as ue}from"./ImageMaterial-379bb586.js";import{d as me}from"./LayerView-76d3ea4d.js";import{a as fe}from"./RefreshableLayerView-814db235.js";function pe(i,e,t){const s=v(i)/E(i),a={width:t,height:t};return s>1.0001?a.height=t/s:s<.9999&&(a.width=t*s),a.width=Math.round(a.width/(v(i)/v(e))),a.height=Math.round(a.height/(E(i)/E(e))),a}function j(i,e){return F(i,[[e[0],e[1],-1],[e[2],e[1],-1],[e[2],e[3],-1],[e[0],e[3],-1]])}function ye(i,e,t){if(!q(e,t))return j(i,t);const s=[e[1]-t[1],Math.min(e[3],t[3])-Math.max(e[1],t[1]),t[3]-e[3],123456],a=[e[0]-t[0],Math.min(e[2],t[2])-Math.max(e[0],t[0]),t[2]-e[2],123456],l=t[2]-t[0],n=t[3]-t[1],r=a[0]>0&&a[2]>0?3:2,o=s[0]>0&&s[2]>0?3:2,h=(o+1)*(r+1),c=W(3*h),g=k(2*h),d=new Array(6*(o*r-1));let $=0,I=0,L=0,u=0,f=0;for(let y=0;y<4;y++){const P=s[y];if(P<=0)continue;let A=0;for(let _=0;_<4;_++){const T=a[_];T<=0||(c[I++]=t[0]+A,c[I++]=t[1]+$,c[I++]=-1,g[L++]=A/l,g[L++]=$/n,_<3&&y<3&&(_!==1||y!==1)&&(d[f++]=u,d[f++]=u+1,d[f++]=u+r+1,d[f++]=u+1,d[f++]=u+r+2,d[f++]=u+r+1),u++,A+=T)}$+=P}const z=new Array(d.length);return new B(i,[[p.POSITION,new M(c,3,!0)],[p.NORMAL,new M(_e,3,!0)],[p.UV0,new M(g,2,!0)]],[[p.POSITION,d],[p.NORMAL,z],[p.UV0,d]])}const _e=[0,0,1];let m=class extends fe(ce(me)){constructor(){super(...arguments),this.drapeSourceType=Q.RasterImage,this.updatePolicy=Y.SYNC,this.fullExtentInLocalViewSpatialReference=null,this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlays=new Array,this.updateWhenStationary=!0,this._drapeSourceRenderer=null,this.refreshDebounced=J(async i=>{this.destroyed||await this._doRefresh(i).catch(e=>{b(e)||x.getLogger(this).error(e)})},2e3)}initialize(){this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this),this.handles.add(K(()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this))),this.addResolvingPromise(ge(this).then(i=>this._set("fullExtentInLocalViewSpatialReference",i))),this.updatingHandles.add(()=>this.suspended,()=>this._suspendedChangeHandler()),this.handles.add(this.view.resourceController.scheduler.registerIdleStateCallbacks(()=>{this._isScaleRangeActive()&&this.notifyChange("suspended")},()=>{})),this._isScaleRangeLayer()&&this.updatingHandles.add(()=>this.layer.effectiveScaleRange,()=>this.notifyChange("suspended"))}destroy(){this.clear()}setDrapingExtent(i,e){this._spatialReference=e,i.forEach(t=>{this._overlays[t.index]=t,this._updateImageExtent(t)})}_updateImageExtent(i){const e=this._clippedExtent(i.extent,we);if(e==null)return;const t=pe(i.extent,e,i.resolution);let s=i.pixelRatio*this.view.state.pixelRatio;const{layer:a}=this;if("imageMaxWidth"in a&&a.imageMaxWidth!=null||"imageMaxHeight"in a&&a.imageMaxHeight!=null){const n=a.imageMaxWidth,r=a.imageMaxHeight;if(t.width>n){const o=n/t.width;t.height=Math.floor(t.height*o),t.width=n,s*=o}if(t.height>r){const o=r/t.height;t.width=Math.floor(t.width*o),t.height=r,s*=o}}const l=this._extents[i.index];l&&X(l.extent,e)&&this._imageSizeEquals(e,l.imageSize,t)||(this._extents[i.index]={extent:D(e),imageSize:t,pixelRatio:s},this.suspended||this._fetch(i.index).catch(n=>{b(n)||x.getLogger(this).error(n)}))}clear(){for(let i=0;i<this._images.length;i++)this._clearImage(i)}async doRefresh(){return this._doRefresh()}async _doRefresh(i){if(this.suspended)return;const e=[];for(let t=0;t<this._extents.length;t++)this._extents[t]&&e.push(this._fetch(t,i));await Z(e)}canResume(){if(!super.canResume())return!1;const i=this.layer;if(this._isScaleRangeActive()){const{minScale:e,maxScale:t}=i.effectiveScaleRange,s=this.view.scale;if(s<t||e>0&&s>e)return!1}return!0}isUpdating(){return this._images.some(i=>!!i.loadingPromise)}async processResult(i,e,t){(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement)&&(i.image=e)}findExtentInfoAt(i){for(const e of this._extents){const t=e.extent;if(new G(t[0],t[1],t[2],t[3],this._spatialReference).contains(i))return e}return null}getFetchOptions(){}async redraw(i,e){await ee(this._images,async(t,s)=>{t&&(await i(t,e),await this._createStageObjects(s,t.image,e))})}_imageSizeEquals(i,e,t){if(!this.maximumDataResolution)return!1;const s=v(i)/this.maximumDataResolution.x,a=E(i)/this.maximumDataResolution.y,l=s/e.width,n=a/e.height,r=s/t.width,o=a/t.height,h=Math.abs(l-r),c=Math.abs(n-o),g=te.TESTS_DISABLE_OPTIMIZATIONS?0:1.5;return h<=g&&c<=g}async _fetch(i,e){if(this.suspended)return;const t=this._extents[i],s=t.extent;this._images[i]||(this._images[i]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:D(s)});const a=this._images[i];a.loadingAbortController=N(a.loadingAbortController);const l=new G(s[0],s[1],s[2],s[3],this._spatialReference);if(l.width===0||l.height===0)return void this._clearImage(i);const n=new AbortController;a.loadingAbortController=n,ie(e,()=>n.abort());const r=n.signal,o=this._waitFetchReady(r).then(async()=>{const h={requestAsImageElement:!0,pixelRatio:this._overlays[i].pixelRatio,...this.getFetchOptions(),signal:r},{height:c,width:g}=t.imageSize;return this.layer.fetchImage(l,g,c,h)}).then(h=>{if(ae(r))throw x.getLogger(this).warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),H();return this.processResult(a,h)}).then(()=>{O(a.renderExtent,s)}).finally(()=>{o===a.loadingPromise&&(a.loadingPromise=null,a.loadingAbortController=null)});a.loadingPromise=o,this.notifyChange("updating"),await o.then(async()=>{if(r.aborted)throw H();await this._createStageObjects(i,a.image,r),this.notifyChange("updating")}).catch(h=>{throw h&&!b(h)&&x.getLogger(this).error(h),this.notifyChange("updating"),h})}_clearImage(i){const e=this._images[i];if(e){e.renderGeometry!=null&&(this._drapeSourceRenderer.removeGeometries([e.renderGeometry],C.UPDATE),e.renderGeometry=null);const t=this.view._stage;t.remove(e.texture),e.texture=null,t.remove(e.material),e.material=null,e.loadingAbortController=N(e.loadingAbortController),e.loadingPromise=null,e.image=null,e.pixelData=null}}async _createStageObjects(i,e,t){const s=this.view._stage,a=this._images[i],l=()=>{s.remove(a.texture),a.texture=null,a.renderGeometry!=null&&(this._drapeSourceRenderer.removeGeometries([a.renderGeometry],C.UPDATE),a.renderGeometry=null)};if(e){const n=new se(e,{width:e.width,height:e.height,preMultiplyAlpha:!0,wrap:{s:U.CLAMP_TO_EDGE,t:U.CLAMP_TO_EDGE}});let r;if(await re(this._images[i===R.INNER?R.OUTER:R.INNER].loadingPromise),V(t),l(),s.add(n),await s.loadImmediate(n),a.texture=n,a.material==null?(a.material=new ue({transparent:!0,textureId:n.id}),s.add(a.material)):a.material.setParameters({textureId:n.id}),i===R.INNER)r=j(a.material,a.renderExtent);else{const o=this._images[0].renderExtent;if(!o)return void l();r=ye(a.material,o,a.renderExtent)}a.renderGeometry=new ne(r),a.renderGeometry.localOrigin=this._overlays[i].renderLocalOrigin,this._drapeSourceRenderer.addGeometries([a.renderGeometry],C.UPDATE)}else l(),s.remove(a.material),a.material=null}_isScaleRangeLayer(){return"effectiveScaleRange"in this.layer}_isScaleRangeActive(){const i=this.layer;if(!this._isScaleRangeLayer())return!1;const{minScale:e,maxScale:t}=i.effectiveScaleRange;return oe(e,t)}_clippedExtent(i,e){if(this.view.viewingMode!=="local")return O(e,i);const t=this.view.basemapTerrain;return t.ready?le(i,t.extent,e):O(e,i)}_suspendedChangeHandler(){this.suspended?this.clear():this.refreshDebounced()}async _waitFetchReady(i){await he(()=>this.view.stationary,i),V(i)}};w([S()],m.prototype,"layer",void 0),w([S()],m.prototype,"suspended",void 0),w([S({readOnly:!0})],m.prototype,"fullExtentInLocalViewSpatialReference",void 0),w([S()],m.prototype,"updating",void 0),m=w([de("esri.views.3d.layers.DynamicLayerView3D")],m);const Ie=m,we=D();export{Ie as z};

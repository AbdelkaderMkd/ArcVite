import{aQ as r,aR as o,d2 as c,aT as x,aP as P,aA as n}from"./index-383689b1.js";import{l as f}from"./ExportWMSImageParameters-7560b53c.js";const g=u=>{let e=class extends u{initialize(){this.exportImageParameters=new f({layer:this.layer})}destroy(){this.exportImageParameters=P(this.exportImageParameters)}get exportImageVersion(){var t;return(t=this.exportImageParameters)==null||t.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(t){const{layer:a}=this;if(!t)return Promise.reject(new n("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));const{popupEnabled:m}=a;if(!m)return Promise.reject(new n("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:m}));const h=this.createFetchPopupFeaturesQuery(t);if(!h)return Promise.resolve([]);const{extent:s,width:i,height:p,x:l,y}=h;if(!(s&&i&&p))throw new n("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:i,height:p});return a.fetchFeatureInfo(s,i,p,l,y)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o(c)],e.prototype,"timeExtent",void 0),e=r([x("esri.layers.mixins.WMSLayerView")],e),e};export{g as i};

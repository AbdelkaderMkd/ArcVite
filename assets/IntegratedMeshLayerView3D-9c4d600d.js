import{fQ as n,aB as p,aY as m,aC as i,aD as e,fA as l,aF as d}from"./index-3572d442.js";import{E as c}from"./I3SMeshView3D-1bb1f6ed.js";import{n as u}from"./LayerView3D-e03f69d7.js";import{u as h}from"./LayerView-e8e5ef51.js";import"./I3SOverrides-c4c12545.js";import"./I3SNode-ecdf4920.js";import"./I3SUtil-36f5abf4.js";import"./I3SBinaryReader-32e63862.js";import"./ReactiveSet-c4376bdd.js";import"./meshFeatureSet-7b2c39b7.js";import"./External-52a83f4b.js";import"./FeatureLayerView3D-2ce97c9f.js";import"./FeatureLayerViewBase3D-c14cfdcc.js";import"./FeatureLikeLayerView3D-4fd4c894.js";import"./dehydratedFeatureComparison-931d5da5.js";import"./queryForSymbologySnapping-a002c83e.js";import"./hash-6f442295.js";import"./Graphics3DScaleVisibility-49953317.js";import"./optimizedFeatureQueryEngineAdapter-1f5ef20b.js";import"./PooledRBush-a9eb28cf.js";import"./popupUtils-8716dbe3.js";import"./QueryEngine-d791375a.js";import"./WhereClause-4269ed6d.js";import"./TimeOnly-b48aab9d.js";import"./timeSupport-05992e90.js";import"./projectionSupport-cd867045.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-0b94f1b2.js";import"./generateRendererUtils-6185551e.js";import"./FeatureStore-4c62ffcc.js";import"./BoundsStore-cbc79471.js";import"./heatmapTextureUtils-61534fe7.js";import"./projectExtentUtils-ed0bdcf8.js";import"./query-d78c3cab.js";import"./pbfQueryUtils-bd4b4c46.js";import"./pbf-db891cc3.js";import"./EventedSet-e6e4d476.js";import"./FeatureLayerView-f71880b1.js";import"./RefreshableLayerView-13947b50.js";import"./SceneModification-f4635393.js";import"./persistable-5593d627.js";import"./resourceExtension-7f55cdd7.js";import"./SceneLayerWorker-096b9c79.js";const g=.2;let r=class extends c(u(h)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const st=r;export{st as default};

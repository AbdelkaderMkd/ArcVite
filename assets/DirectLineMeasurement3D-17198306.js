import{aC as i,aD as n,aZ as H,oX as V,aF as L,aJ as it,aR as D,aH as A,b6 as z,oJ as nt,rb as st,m3 as at,rc as rt,rd as ot,aB as $,de as x,ks as lt,aA as ut,b5 as N,q_ as dt,nr as R,kx as ht,di as pt,oO as ct,oQ as k,oR as gt,oS as I,dk as mt,oT as F,oU as vt}from"./index-3572d442.js";import{c as yt}from"./Analysis-a84f5e3c.js";import{t as wt}from"./memoize-3e55df82.js";import{W as _t}from"./measurementUtils-1c25ce29.js";import{O as bt}from"./SnappingVisualizer3D-66319d28.js";import{G as Pt,F as ft,A as Dt}from"./dragEventPipeline3D-fb026afb.js";import{e as Mt}from"./interfaces-b9217804.js";import{e as W}from"./interfaces-1d0b1e46.js";import{$ as B,w as Lt,e as St}from"./manipulatorUtils-37b2e00d.js";import{c as Vt}from"./PointVisualElement-e0971372.js";import{a as Ot}from"./AnalysisToolBase-5813c0ea.js";import{V as $t,p as xt,w as Ct}from"./EditGeometryOperations-22538b25.js";import{d as Tt,R as Ut}from"./dragEventPipeline-97b76120.js";import{a as Ht}from"./SceneSnappingManagerPool-b1feccfc.js";import{e as At}from"./SnappingContext-1f46e914.js";import{f as Et}from"./SnappingDragPipelineStep-6086e52b.js";import{u as Gt}from"./InteractiveAnalysisViewModel-6301e90a.js";import{u as zt}from"./MeasurementWidgetContent-9b788c5b.js";import"./geometryEngine-e6870974.js";import"./geometryEngineBase-bccedf39.js";import"./hydrated-f1c1fee2.js";import"./vec4f32-0d1b2306.js";import"./RightAngleQuadVisualElement-65f4bca4.js";import"./Object3DVisualElement-8f3bdc79.js";import"./drawUtils-55d69bda.js";import"./PointSnappingHint-63d5c29e.js";import"./dehydratedFeatureComparison-931d5da5.js";let f=class extends yt{constructor(t){super(t),this.type="direct-line-measurement",this.startPoint=null,this.endPoint=null,this.unit=null}get requiredPropertiesForEditing(){return[this.startPoint,this.endPoint]}clear(){this.startPoint=null,this.endPoint=null}};i([n({type:["direct-line-measurement"]})],f.prototype,"type",void 0),i([n({type:H})],f.prototype,"startPoint",void 0),i([n({type:H})],f.prototype,"endPoint",void 0),i([n({type:V,value:null})],f.prototype,"unit",void 0),i([n({readOnly:!0})],f.prototype,"requiredPropertiesForEditing",null),f=i([L("esri.analysis.DirectLineMeasurementAnalysis")],f);const J=f;var M;(function(t){t.Manipulators="manipulators",t.AnalysisViewDestroyed="analysis-view-destroyed",t.AnalysisView="analysis-view"})(M||(M={}));let d=class extends it{constructor(t){super(t),this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._lastDraggedHandle=null}initialize(){this._laserLine=new Vt({view:this.view,attached:!0,isDecoration:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView(),this.addHandles(D(()=>this._params,({laserLineGlowColor:t,laserLineInnerColor:e,laserLineGlobalAlpha:s})=>{const a=this._laserLine,o=a.style;a.style={...o,innerColor:e,glowColor:t,globalAlpha:s}}))}destroy(){this._laserLine=A(this._laserLine)}get _params(){const{accentColor:t}=this.view.effectiveTheme;return{laserLineGlowColor:z.toUnitRGB(t),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:z.toUnitRGB(nt(t)),laserLineInnerWidth:.75,laserLineGlobalAlpha:.75*t.a,handleColor:st(t,.5),handleRadius:5}}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){const t=this._laserLine.testData,e=this.analysisViewData.testData;return{labels:e==null?void 0:e.labels,stripeLength:e==null?void 0:e.stripeLength,laserLineRenderer:{heightManifoldEnabled:t!=null&&t.heightManifoldEnabled,heightManifoldTarget:t!=null?t.heightManifoldTarget:null,pointDistanceEnabled:t!=null&&t.pointDistanceEnabled,pointDistanceOrigin:t!=null?t.pointDistanceOrigin:null,pointDistanceTarget:t!=null?t.pointDistanceTarget:null,lineVerticalPlaneEnabled:t!=null&&t.lineVerticalPlaneEnabled}}}get _cursorPosition(){const t=x(),e=this.cursorPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _startPosition(){const t=x(),e=this.analysis.startPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _endPosition(){const t=x(),e=this.analysis.endPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _laserLineParams(){const t=this._focusPosition,{active:e,lineState:s}=this.toolState,a=this.analysisViewData,o=this.laserLineEnabled&&!!t&&s!=="measured"&&e;if(!o||!this.visible||a==null||a.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const l=a.actualVisualizedMeasurement,r=this.view.viewingMode!=="local"&&o&&!!this.analysis.startPoint&&l==="geodesic",h=o&&a.viewMode===W.Triangle;return{heightManifoldTarget:l==="euclidean"?t:null,pointDistanceLine:r?this._pointDistanceLine:null,lineVerticalPlaneSegment:h?at(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:t}=this.toolState,e=this.analysisViewData,s=e!=null&&!e.destroyed&&e.measurementMode===Mt.Euclidean&&e.viewMode===W.Direct;switch(t){case"drawing":return s?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return s?this._lastDraggedHandle==="start"?this._endPosition:this._startPosition:this._lastDraggedHandle==="start"?this._startPosition:this._endPosition;default:return this.cursorPoint!=null?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:this.toolState.lineState==="drawing"||this._lastDraggedHandle==="end"?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const t=this._params,{view:e}=this,s=()=>{const u=Lt(t.handleColor),P=[new St(lt(u,1,32,32))],_=new B({view:e,renderObjects:P});return _.available=!1,_.radius=t.handleRadius,[_,u]},[a,o]=s(),[l,r]=s(),h=new B({view:this.view});h.available=!1,h.interactive=!1,this.analysis.startPoint!=null&&(a.location=this.analysis.startPoint,a.available=!0),this.analysis.endPoint!=null&&(l.location=this.analysis.endPoint,l.available=!0);const g=()=>{let u=this._lastDraggedHandle;a.grabbing&&!l.grabbing&&(u="start"),l.grabbing&&!a.grabbing&&(u="end"),a.grabbing||l.grabbing||(u=null),this._lastDraggedHandle=u},b=a.events.on("grab-changed",g),w=l.events.on("grab-changed",g);return this.addHandles([b,w,D(()=>ot(this._params.handleColor),u=>{o.setParameters({color:u}),r.setParameters({color:u})},{equals:rt})],M.Manipulators),{start:a,end:l,cursor:h}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles(M.AnalysisView),this.addHandles([D(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.destroyed},t=>{t&&this.removeHandles(M.AnalysisView)},$),D(()=>[this.toolState.lineState==="measured",this.analysisViewData],([t,e])=>{e==null||e.destroyed||(e.allowVisualElementsOrientationChange=!t)},$),D(()=>this._laserLineParams,t=>{const e=this._laserLine;e.heightManifoldTarget=t.heightManifoldTarget,e.pointDistanceLine=t.pointDistanceLine,e.lineVerticalPlaneSegment=t.lineVerticalPlaneSegment},$)],M.AnalysisView)}_updateVisibility(t){this.initialized&&(this._visible=t,t?this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=t)}};i([n({constructOnly:!0})],d.prototype,"view",void 0),i([n()],d.prototype,"_params",null),i([n({constructOnly:!0})],d.prototype,"analysis",void 0),i([n({constructOnly:!0})],d.prototype,"analysisViewData",void 0),i([n()],d.prototype,"cursorPoint",void 0),i([n()],d.prototype,"toolState",void 0),i([n()],d.prototype,"visible",null),i([n()],d.prototype,"testData",null),i([n()],d.prototype,"_visible",void 0),i([n()],d.prototype,"_laserLine",void 0),i([n({constructOnly:!0})],d.prototype,"laserLineEnabled",void 0),i([n()],d.prototype,"_cursorPosition",null),i([n()],d.prototype,"_startPosition",null),i([n()],d.prototype,"_endPosition",null),i([n()],d.prototype,"_lastDraggedHandle",void 0),i([n()],d.prototype,"_laserLineParams",null),i([n()],d.prototype,"_focusPosition",null),i([n()],d.prototype,"_pointDistanceLine",null),d=i([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],d);let p=class extends Ot{constructor(t){super(t),this._updatingHandles=new ut,this._emulatedDrag=null,this.lineState="initial",this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.cursorPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null,this.cursorManipulator=null,this._getSnappingContext=wt(e=>new At({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new $t(new xt("point",Ct(!0,!1,this.view.spatialReference))),visualizer:new bt}))}initialize(){const{view:t,analysis:e,analysisViewData:s,visible:a}=this;this.measurementView=new d({toolState:this,view:t,analysis:e,analysisViewData:s,visible:a});const o=Ht(t);this._snappingManagerResult=o,this.addHandles(o);const{start:l,end:r,cursor:h}=this.measurementView.createManipulators(),g=(w,u,P)=>Tt(w,(_,Q,S,E)=>{const G=Dt(_),X=this._snappingManager,Z=this._getSnappingContext(E),K=this._updatingHandles,{lineState:Y}=this;S=S.next(G).next(Ut(this,[P,u])).next(m=>{if(u!=="cursorPoint"){const v=this.analysis[u];v!=null&&(_.location=v)}return m});const tt=ft(this.view),et=m=>{const v=tt(m);return v||this.lineState!=="drawing"&&this.lineState!=="initial"||(this[u]=null,this[P]=null),v};let O=Q.next(G).next(et);if(E!=="touch"||Y==="editing"){const{snappingStep:m,cancelSnapping:v}=Et({snappingManager:X,snappingContext:Z,updatingHandles:K});S=S.next(v),O=O.next(...m)}O.next(m=>m.action!=="start"?m:null).next(m=>{const v=pt(m.mapEnd,new H);this[u]=v,_.location=v,this[P]=this._surfaceLocation(v,m.surfaceType)})}),b=w=>w.events.on("grab-changed",()=>{const u=l.grabbing||r.grabbing;this.lineState=u?"editing":"measured"});this.addHandles([g(l,"startPoint","startPointSurfaceLocation"),g(r,"endPoint","endPointSurfaceLocation"),g(h,"cursorPoint","cursorPointSurfaceLocation"),b(l),b(r)]),this.manipulators.add(l),this.manipulators.add(r),this.manipulators.add(h),this.startManipulator=l,this.endManipulator=r,this.cursorManipulator=h,this.addHandles(D(()=>this.state,w=>{w==="measured"&&this.finishToolCreation()},N)),dt(this)}destroy(){this._updatingHandles=A(this._updatingHandles),this.measurementView=A(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){const{analysis:t}=this;if(t.startPoint==null&&t.endPoint==null)return"ready";const{lineState:e}=this;return this.validMeasurement&&e!=="editing"&&e!=="drawing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.lineState==="drawing"?"crosshair":null}get startPoint(){return this.analysis.startPoint}set startPoint(t){this.analysis.startPoint=t}get endPoint(){return this.analysis.endPoint}set endPoint(t){this.analysis.endPoint=t}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(t){this.measurementView.cursorPoint=t}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return this.analysis.startPoint!=null&&this.analysis.endPoint!=null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onShow(){this.measurementView.show(),this._updateManipulatorAvailability()}onHide(){this.measurementView.hide()}onDeactivate(){var t;(t=this._emulatedDrag)==null||t.cancel(),this._emulatedDrag=null}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t)}this._updateManipulatorAvailability()}_handlePointerMove(t){var h,g;if(!this.active||this.view.navigating)return;const{pointerType:e}=t;if(e!=="mouse")return;const s=R(t),{lineState:a,cursorManipulator:o,endManipulator:l}=this;let r=!1;this.cursorPoint==null&&((h=this._emulatedDrag)==null||h.cancel(),this._emulatedDrag=C(o,e,s),r=!0),a==="initial"&&((g=this._emulatedDrag)==null||g.update(s),r=!0),a==="drawing"&&(l.events.emit("drag",{action:"update",start:s,screenPoint:s}),r=!0),r&&t.stopPropagation()}_handleImmediateClick(t){var g,b,w,u,P;if(!this.active||!_t(t))return;const e=R(t),{pointerType:s}=t,{cursorManipulator:a,startManipulator:o,endManipulator:l,lineState:r}=this;let h=!1;switch(this.cursorPoint==null&&((g=this._emulatedDrag)==null||g.cancel(),this._emulatedDrag=C(a,s,e)),r){case"initial":if((b=this._emulatedDrag)==null||b.update(e),this.cursorPoint!=null){(w=this._emulatedDrag)==null||w.end(e),this._emulatedDrag=null;const{cursorPoint:_}=this;this.startPoint=_,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,o.location=_,o.interactive=!1,l.interactive=!1,this.lineState="drawing",this._emulatedDrag=C(l,s,e),h=!0}break;case"drawing":(u=this._emulatedDrag)==null||u.update(e),this.endPoint!=null&&((P=this._emulatedDrag)==null||P.end(e),this._emulatedDrag=null,o.interactive=!0,l.interactive=!0,this.lineState="measured",h=!0)}h&&t.stopPropagation()}_surfaceLocation(t,e){return e===Pt.GROUND?"on-the-surface":(t.z??0)>=this._getElevation(t)?"above-the-surface":"below-the-surface"}_updateManipulatorAvailability(){this.startManipulator.available=this.analysis.startPoint!=null,this.endManipulator.available=this.analysis.endPoint!=null}_getElevation(t){return this.view.basemapTerrain.ready?ht(this.view.elevationProvider,t)??0:0}get test(){return{snappingManager:this._snappingManager}}};function C(t,e,s){return t.events.emit("drag",{action:"start",pointerType:e,start:s,screenPoint:s}),{update:a=>t.events.emit("drag",{action:"update",start:a,screenPoint:a}),end:a=>t.events.emit("drag",{action:"end",start:a,screenPoint:a}),cancel:()=>t.events.emit("drag",{action:"cancel"})}}i([n({readOnly:!0})],p.prototype,"state",null),i([n()],p.prototype,"lineState",void 0),i([n({readOnly:!0})],p.prototype,"cursor",null),i([n()],p.prototype,"startPoint",null),i([n()],p.prototype,"endPoint",null),i([n()],p.prototype,"cursorPoint",null),i([n({constructOnly:!0})],p.prototype,"analysis",void 0),i([n({constructOnly:!0})],p.prototype,"analysisViewData",void 0),i([n()],p.prototype,"measurementView",void 0),i([n({constructOnly:!0})],p.prototype,"view",void 0),i([n({readOnly:!0})],p.prototype,"validMeasurement",null),i([n({value:null})],p.prototype,"startPointSurfaceLocation",void 0),i([n({value:null})],p.prototype,"endPointSurfaceLocation",void 0),i([n({value:null})],p.prototype,"cursorPointSurfaceLocation",void 0),i([n()],p.prototype,"updating",null),p=i([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],p);const Rt=p;let y=class extends Gt{constructor(e){super(e),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="DirectLineMeasurement3DViewModel is only supported in 3D views.",this._userUnit=null,this._userUnitOptions=null}initialize(){this.addHandles(D(()=>({analysis:this.analysis,unit:this.unit}),({analysis:e,unit:s})=>{e!=null&&(e.unit=s)},N))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){if(this.tool==null)return null;const e={mode:"euclidean",directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:null,state:"unavailable"},verticalDistance:{text:null,state:"unavailable"}},{analysisViewData:s}=this.tool;if(s==null)return e;const a=s.actualVisualizedMeasurement,o=s.result!=null?"available":"unavailable";switch(a){case"euclidean":return{mode:"euclidean",directDistance:{text:s.directLabelText,state:o},horizontalDistance:{text:s.horizontalLabelText,state:o},verticalDistance:{text:s.verticalLabelText,state:o}};case"geodesic":return{mode:"geodesic",directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:s.horizontalLabelText,state:o},verticalDistance:{text:s.verticalLabelText,state:o}};default:return e}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new J}constructTool(){return new Rt({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(e,s){const a=this.unitOptions;return a.includes(e)?e:s?this._findSelectableUnit(s):a[0]}_filteredOrAllUnits(e){if(!e)return V.slice();const s=e.filter(a=>V.includes(a));return s.length===0?V.slice():s}};i([n({type:J})],y.prototype,"analysis",void 0),i([n({readOnly:!0})],y.prototype,"state",null),i([n({readOnly:!0})],y.prototype,"measurement",null),i([n()],y.prototype,"unitOptions",null),i([n()],y.prototype,"unit",null),i([n(ct)],y.prototype,"defaultUnit",void 0),i([n()],y.prototype,"_userUnit",void 0),i([n()],y.prototype,"_userUnitOptions",void 0),y=i([L("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],y);const j=y,q="esri-direct-line-measurement-3d",T={base:q,newMeasurementButton:`${q}__clear-button`,widgetIcon:vt.measureLine};let c=class extends gt{constructor(t,e){super(t,e),this.iconClass=T.widgetIcon,this.icon=null,this.messages=null,this.messagesCommon=null,this.viewModel=new j}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:e,unit:s,unitOptions:a,viewModel:o}=this,{active:l,measurement:r,state:h,supported:g}=o;return I("div",{"aria-label":this.messages.widgetLabel,class:this.classes(T.base,F.widget,F.panel),key:this,role:"presentation"},this.visible?I(zt,{active:l,measurementItems:[{key:"direct",title:t.direct,value:U(r==null?void 0:r.directDistance)},{key:"horizontal",title:t.horizontal,value:U(r==null?void 0:r.horizontalDistance)},{key:"vertical",title:t.vertical,value:U(r==null?void 0:r.verticalDistance)}],messages:{...t,notApplicable:e==null?void 0:e.notApplicable},newMeasurementButtonClass:T.newMeasurementButton,state:h,supported:g,unit:s,unitOptions:a,onNewMeasurementClick:()=>{mt(this.viewModel.start())},onUnitChange:b=>{this.unit=b}}):null)}};function U(t){return(t==null?void 0:t.state)==="available"?t.text:null}i([n()],c.prototype,"view",null),i([n()],c.prototype,"visible",null),i([n()],c.prototype,"active",null),i([n({constructOnly:!0,nonNullable:!0})],c.prototype,"analysis",null),i([n()],c.prototype,"iconClass",void 0),i([n()],c.prototype,"icon",void 0),i([n()],c.prototype,"label",null),i([n(),k("esri/widgets/DirectLineMeasurement3D/t9n/DirectLineMeasurement3D")],c.prototype,"messages",void 0),i([n(),k("esri/t9n/common")],c.prototype,"messagesCommon",void 0),i([n()],c.prototype,"uiStrings",void 0),i([n({type:j})],c.prototype,"viewModel",void 0),i([n()],c.prototype,"unitOptions",null),i([n()],c.prototype,"unit",null),c=i([L("esri.widgets.DirectLineMeasurement3D")],c);const ge=c;export{ge as default};

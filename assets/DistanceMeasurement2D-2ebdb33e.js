import{aC as s,aD as i,aF as C,aV as x,oG as A,oH as N,aR as y,aB as D,aH as f,aZ as k,aU as j,aY as S,d7 as q,oJ as R,cP as F,nP as z,oK as K,oI as J,aM as U,aT as Q,oL as V,oN as b,oM as M,eL as w,eS as I,k6 as X,oO as Y,oX as L,eq as Z,eK as ee,oQ as G,oR as te,oS as B,dk as se,oT as H,oU as ie}from"./index-3572d442.js";import{g as oe,d as re,D as ne}from"./unitFormatUtils-0cfdbae8.js";import{geodesicLength as ae,geodesicDensify as le,planarLength as he}from"./geometryEngine-e6870974.js";import{l as ce}from"./Draw-3e2ed95a.js";import{l as ue,d as me,v as de,x as pe}from"./dragEventPipeline-97b76120.js";import{S as ve}from"./GraphicManipulator-0f145645.js";import{n as ye,u as we}from"./MeasurementWidgetContent-9b788c5b.js";import"./geometryEngineBase-bccedf39.js";import"./hydrated-f1c1fee2.js";import"./SnappingVisualizer2D-e0f68fe7.js";import"./SnappingContext-1f46e914.js";import"./PointSnappingHint-63d5c29e.js";import"./EditGeometryOperations-22538b25.js";import"./SnappingOperation-1aa6a3b1.js";import"./drawSurfaces-14bbbc2d.js";import"./dehydratedFeatureComparison-931d5da5.js";import"./SnappingDragPipelineStep-6086e52b.js";import"./drawUtils-55d69bda.js";const g=1e5;let m=class extends ue{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null}initialize(){A("esri/core/t9n/Units").then(t=>{this.messages=t}),this.addHandles(N(async()=>{this.messages=await A("esri/core/t9n/Units")}));const e=this.view;this._draw=new ce({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer]),e.focus(),this.addHandles([y(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updatePolylines()},D),y(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:o})=>o);for(const{handle:o}of this._vertices)o.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)})])}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=f(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=f(this._measurementLayer),this._manipulatorLayer=f(this._manipulatorLayer),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],t=>this._updateSketch(t.vertices)),e.on("draw-complete",()=>{this._stopSketch()})}_stopSketch(){this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:r,manipulator:u}=this._vertices.pop();r.remove(),this.manipulators.remove(u)}for(let r=this._vertices.length;r<e.length;r++){const[u,p]=e[r],v=ge(new k({x:u,y:p,spatialReference:t}),this.view,this._manipulatorLayer);this.manipulators.add(v);const _=me(v,(O,W)=>{W.next(de(this.view)).next(pe(O.graphic,j.Local)).next(()=>{const T=O.graphic.geometry;this._vertices[r].coord=[T.x,T.y],this._updatePolylines()})});this._vertices.push({manipulator:v,coord:[u,p],handle:_})}const o=this._vertices.length-1,n=this._vertices[o],[l,a]=e[o];n.coord[0]===l&&n.coord[1]===a||(n.coord=[l,a],n.manipulator.graphic.geometry=new k({x:l,y:a,spatialReference:t}));const h=this._drawActive?this._vertices[o].manipulator:null;this.manipulators.forEach(({manipulator:r})=>{r.interactive=h==null||r!==h}),this._updatePolylines()}_updatePolylines(){var v;if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=this._vertices.map(({coord:_})=>_),{measurement:t,drawing:o,original:n}=_e(e,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",t);const l=Me(this.messages,t,this.unit);let a,h;this._set("measurementLabel",l);const{graphics:r}=this._measurementLayer,u=r.length===2,{effectiveTheme:p}=this.view;u?(a=r.at(0),h=r.at(1)):(a=new S({symbol:new q({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:R(p.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:p.accentColor.toArray()}]}}})}),h=new S({symbol:new F({color:p.textColor,haloColor:z(R(p.textColor,K.Low),.5),haloSize:2,font:new J({size:14,family:"sans-serif"})})}),r.removeAll(),r.addMany([a,h])),a.geometry=o,h.geometry=(v=n.extent)==null?void 0:v.center,h.symbol.text=l}};function ge(e,t,o){const n=z(t.effectiveTheme.accentColor,.5),l={type:"simple-line",width:0},a=8,h=new U({style:"circle",color:n,size:a,outline:l}),r=new U({style:"circle",color:n,size:1.5*a,outline:l}),u=new S({geometry:e,symbol:h});return new ve({view:t,layer:o,graphic:u,focusedSymbol:r})}function _e(e,t,o){const n=new Q({paths:[e],spatialReference:t});let l,a;if(t.isGeographic)if(V(t))l=b([n],"meters")[0],a=M(n,g);else{const h=w(n,I.WGS84),r=M(h,g);l=b([h],"meters")[0],a=w(r,t)}else if(t.isWebMercator)l=ae(n,"meters"),a=le(n,g,"meters");else{const h=he(n,"meters");if(h>=o){const r=w(n,I.WGS84),u=M(r,g);l=b([r],"meters")[0],a=w(u,t)}else l=h,a=n}return{measurement:{geometry:a,length:l},original:n,drawing:a}}function fe(e){return e!=null}function be(e){if(!e)return!1;const{isGeographic:t,isWebMercator:o,isWGS84:n}=e;return t&&!n&&!V(e)||!t&&!o}function Me(e,t,o){if(!t||!e)return"";switch(o){case"metric":return ne(e,t.length,"meters");case"imperial":return re(e,t.length,"meters");default:return oe(e,X(t.length,"meters",o),o)}}s([i()],m.prototype,"_drawActive",void 0),s([i({readOnly:!0})],m.prototype,"cursor",null),s([i({value:!0})],m.prototype,"editable",null),s([i({type:Number})],m.prototype,"geodesicDistanceThreshold",void 0),s([i({readOnly:!0})],m.prototype,"measurement",void 0),s([i({readOnly:!0})],m.prototype,"measurementLabel",void 0),s([i()],m.prototype,"messages",void 0),s([i()],m.prototype,"unit",void 0),s([i({constructOnly:!0})],m.prototype,"view",void 0),m=s([C("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],m);let d=class extends ye{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views.",this.geodesicDistanceThreshold=1e5}initialize(){this.addHandles([y(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),y(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},D),y(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},D)])}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!fe((e=this.view)==null?void 0:e.spatialReference)?"disabled":this.tool!=null&&this.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return L}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await Z(()=>e.ready),be(e.spatialReference)&&await ee()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new m({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:o}=this;return e!=null&&t.includes(e)?e:t.includes(o)?o:t.length>0?t[0]:o}_validateUnits(e){if(e==null)return[];const t=e.filter(o=>L.includes(o));return t.length===0?L.slice():t}};s([i(Y)],d.prototype,"defaultUnit",void 0),s([i({type:Number})],d.prototype,"geodesicDistanceThreshold",void 0),s([i({readOnly:!0})],d.prototype,"measurement",null),s([i({readOnly:!0})],d.prototype,"measurementLabel",null),s([i({readOnly:!0})],d.prototype,"state",null),s([i({type:String})],d.prototype,"unit",null),s([i({type:[String]})],d.prototype,"unitOptions",null),d=s([C("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],d);const E=d,P="esri-distance-measurement-2d",$={base:P,newMeasurementButton:`${P}__clear-button`,widgetIcon:ie.measureLine};let c=class extends te{constructor(e,t){super(e,t),this.iconClass=$.widgetIcon,this.icon=null,this.messages=null,this.messagesCommon=null,this.viewModel=new E}get active(){return this.viewModel.active}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,unit:o,unitOptions:n,viewModel:l}=this,{active:a,measurementLabel:h,state:r,supported:u}=l;return B("div",{"aria-label":this.messages.widgetLabel,class:this.classes($.base,H.widget,H.panel),key:this,role:"presentation"},this.visible?B(we,{active:a,measurementItems:[{key:"distance",title:e.distance,value:h}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:$.newMeasurementButton,state:r,supported:u,unit:o,unitOptions:n,onNewMeasurementClick:()=>{se(this.viewModel.start())},onUnitChange:p=>{this.unit=p}}):null)}};s([i({readOnly:!0})],c.prototype,"active",null),s([i()],c.prototype,"iconClass",void 0),s([i()],c.prototype,"icon",void 0),s([i()],c.prototype,"label",null),s([i()],c.prototype,"uiStrings",void 0),s([i(),G("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],c.prototype,"messages",void 0),s([i(),G("esri/t9n/common")],c.prototype,"messagesCommon",void 0),s([i()],c.prototype,"unit",null),s([i()],c.prototype,"unitOptions",null),s([i()],c.prototype,"view",null),s([i({type:E})],c.prototype,"viewModel",void 0),s([i({type:Boolean})],c.prototype,"visible",null),c=s([C("esri.widgets.DistanceMeasurement2D")],c);const Ve=c;export{Ve as default};

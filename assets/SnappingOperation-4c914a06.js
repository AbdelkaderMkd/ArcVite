import{jY as B,aM as D,eX as O,jZ as A,j_ as L,dl as T,jQ as G,j$ as Q,eB as U,aA as g,aG as X,aB as x,aD as Y}from"./index-80114339.js";import{r as q}from"./dehydratedFeatureComparison-ba7e0833.js";import{U as J}from"./dragEventPipeline-abaf6ee1.js";import{e as K}from"./SnappingContext-b1b2b57a.js";function lt({predicate:t=()=>!0,snappingManager:n,snappingContext:e,updatingHandles:s,useZ:o=!0}){const i=new J;if(n==null)return{snappingStep:[j,i],cancelSnapping:j};let l,p=null,a=null,c=null;const d=()=>{p=T(p),n.doneSnapping(),a!=null&&a.frameTask.remove(),a=null,l=G(l),c=null},m=V(n,o,i);let f=null,u=null,k=null;return{snappingStep:[r=>{if(!t(r))return r;const{action:v}=r;if(v==="start"){const{info:_}=r,y=W(n.view);if(a=tt(e,r,y),a.context.selfSnappingZ=null,!o&&_!=null){const P=et(e.coordinateHelper,_.handle.component);P!=null&&(a.context.selfSnappingZ={value:P,elevationInfo:e.elevationInfo??B})}}if(a!=null){const{context:_,originalScenePos:y,originalPos:P}=a,{mapEnd:C,mapStart:Z,scenePoints:N}=r,S=E(P,b(C,Z)),I=b(Z,P),F={...r,action:"update"},M=a.context,w=nt(y,N),z=n.update({point:S,scenePoint:w,context:_});if(k=z,H(C,z,I,o),f=S,u=w,v!=="end"){const{frameTask:R}=a;p==null&&(p=new AbortController),c=$=>{s.addPromise(Q(m({frameTask:R,event:F,context:M,point:S,scenePoint:w,delta:I,getLastState:()=>({point:f,scenePoint:u,updatePoint:$.forceUpdate?null:k})},p.signal)))},c({forceUpdate:!1}),l==null&&(l=D(()=>n.options.effectiveEnabled,()=>c==null?void 0:c({forceUpdate:!0})))}}return v==="end"&&d(),r},i],cancelSnapping:r=>(d(),r)}}function V(t,n,e){return U(async({frameTask:s,point:o,scenePoint:i,context:l,event:p,delta:a,getLastState:c},d)=>{const m=await s.schedule(()=>t.snap({point:o,scenePoint:i,context:l,signal:d}),d);if(m.valid){let f=await s.schedule(()=>m.apply(),d);const u=c();u.point!=null&&o!==u.point&&(f=t.update({point:u.point,scenePoint:u.scenePoint,context:l})),u.updatePoint!=null&&q(f,u.updatePoint)||(H(p.mapEnd,f,a,n),e.execute(p))}})}function W(t){return t.type==="3d"?t.resourceController.scheduler.registerTask(O.SNAPPING):A}function tt(t,n,e){return{context:new K({editGeometryOperations:t.editGeometryOperations,elevationInfo:t.elevationInfo,pointer:t.pointer,vertexHandle:n.info!=null?n.info.handle:null,excludeFeature:t.excludeFeature,visualizer:t.visualizer}),originalPos:n.snapOrigin!=null?t.coordinateHelper.vectorToDehydratedPoint(n.snapOrigin):n.mapStart,originalScenePos:n.scenePoints!=null?n.scenePoints.sceneStart:null,frameTask:e}}function E(t,[n,e,s]){const o=L(t);return o.x+=n,o.y+=e,o.hasZ&&(o.z+=s),o}function nt(t,n){return t==null||n==null?null:E(t,b(n.sceneEnd,n.sceneStart))}function b(t,n){const e=t.hasZ&&n.hasZ?t.z-n.z:0;return[t.x-n.x,t.y-n.y,e]}function H(t,n,[e,s,o],i){t.x=n.x+e,t.y=n.y+s,i&&t.hasZ&&n.hasZ&&(t.z=n.z+o)}function et(t,n){if(!t.hasZ())return null;const e=n.vertices;let s=null;for(const o of e){const i=t.getZ(o.pos);if(s!=null&&i!=null&&Math.abs(i-s)>1e-6)return null;s==null&&(s=i)}return s}function j(t){return t}let h=class extends X{constructor(t){super(t),this.constrainResult=n=>n,this._snapPoints=null,this._frameTask=null,this._abortController=null,this._stagedPoint=null,this._snap=U(async(n,e,s,o)=>{const i=this._frameTask;if(i==null)return;const l=await i.schedule(()=>e.snap({...n,context:s,signal:o}),o);l.valid&&await i.schedule(()=>{this.stagedPoint=l.apply(),n!==this._snapPoints&&this._snapPoints!=null&&(this.stagedPoint=e.update({...this._snapPoints,context:s}))},o)})}get stagedPoint(){return this._stagedPoint}set stagedPoint(t){this._stagedPoint=this.constrainResult(t)}initialize(){var n,e;const t=this.view.type==="3d"?(e=(n=this.view)==null?void 0:n.resourceController)==null?void 0:e.scheduler:null;this._frameTask=t!=null?t.registerTask(O.SNAPPING):A}destroy(){this._abortController=T(this._abortController),this._frameTask=G(this._frameTask)}update(t,n,e){this._snapPoints=t;const{point:s,scenePoint:o}=t,i=n.update({point:s,scenePoint:o,context:e});return this.stagedPoint=i,i}async snap(t,n,e){const{point:s,scenePoint:o}=t;return this.stagedPoint=n.update({point:s,scenePoint:o,context:e}),this._snapPoints=t,this._abortController==null&&(this._abortController=new AbortController),this._snap(t,n,e,this._abortController.signal)}async resnap(t,n){this._snapPoints!=null&&await this.snap(this._snapPoints,t,n)}abort(){this._abortController=T(this._abortController),this._snapPoints=null}};g([x({constructOnly:!0})],h.prototype,"view",void 0),g([x()],h.prototype,"stagedPoint",null),g([x()],h.prototype,"constrainResult",void 0),g([x()],h.prototype,"_stagedPoint",void 0),h=g([Y("esri.views.interactive.snapping.SnappingOperation")],h);export{lt as f,h as p};

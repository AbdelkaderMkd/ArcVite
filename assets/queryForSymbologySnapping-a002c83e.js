import{kF as C,eS as x,kG as G,kH as O,ct as D,kI as P,kJ as E,kK as H,kq as J,kL as A,bg as B}from"./index-3572d442.js";async function L(a,d,l,p,o){const{elevationProvider:u,renderCoordsHelper:c}=a,{elevationInfo:g}=d,{pointsInFeatures:b,spatialReference:h}=p,y=x.fromJSON(h),I=G(g,!0),m=await O(I,y,o);D(o);const i=[],e=new Set,t=new Set;f.spatialReference=y;const s=a.elevationProvider.spatialReference??a.spatialReference;for(const{objectId:n,points:r}of b){const S=l(n);if(S==null){for(const w of r)i.push(w.z??0);e.add(n);continue}S.isDraped&&t.add(n);const z=S.graphic.geometry;R.setFromElevationInfo(P(z,g)),R.updateFeatureExpressionInfoContext(m,S.graphic,d);for(const{x:w,y:F,z:q}of r)f.x=w,f.y=F,f.z=q??0,await E(f,k,s,0,{signal:o}),H(k,u,R,c,v),i.push(v.z)}return{elevations:i,drapedObjectIds:t,failedObjectIds:e}}const R=new J,f=C(0,0,0,x.WGS84),v=new A,k=[0,0,0];async function N(a,d,l){if(a==null||d.candidates.length===0)return j;const p=a.graphics3DGraphicsByObjectID??a.graphics3DGraphics,o=[],u=[],{renderer:c}=a,g=c!=null&&"arcadeRequired"in c&&c.arcadeRequired?B():null,b=async(e,{graphic:t,graphics3DSymbol:s})=>{const n=await g,r=await a.getRenderingInfoAsync(t,c,n,{signal:l});return r==null?[]:s.queryForSnapping(e,y,r,l)},{candidates:h,spatialReference:y}=d;for(let e=0;e<h.length;++e){const t=h[e],{objectId:s}=t,n=typeof s=="number"?p==null?void 0:p.get(s):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(b(t,n)),u.push(e))}if(o.length===0)return j;const I=await Promise.all(o);D(l);const m=[],i=[];for(let e=0;e<I.length;++e){const t=I[e],s=u[e];for(const n of t)m.push(n),i.push(s)}return{candidates:m,sourceCandidateIndices:i}}const j={candidates:[],sourceCandidateIndices:[]};export{L as c,N as r};

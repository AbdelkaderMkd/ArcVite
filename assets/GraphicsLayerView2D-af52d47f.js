import{g as p,j as o,V as a,R as m,a as s,b as g,c as l}from"./index-380a2258.js";import{f as c,d as n}from"./LayerView-b255d6d9.js";import{i as d}from"./GraphicContainer-5fcb4223.js";import{o as u}from"./GraphicsView2D-e9f0f123.js";import"./Container-033e5eb1.js";import"./parser-7805afd4.js";import"./definitions-fc2b9fd8.js";import"./enums-b14466b3.js";import"./Texture-d2604ced.js";import"./color-67ffa725.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-bdb1388e.js";import"./FeatureContainer-2ce80447.js";import"./AttributeStoreView-2e386409.js";import"./TiledDisplayObject-20fe6841.js";import"./LabelClass-0fb75dfd.js";import"./labelUtils-d5d366f4.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-299d190b.js";import"./diffUtils-b0a235f1.js";import"./labelingInfo-8b7ed609.js";import"./WGLContainer-827b0a74.js";import"./VertexArrayObject-cc717cf0.js";import"./ProgramTemplate-53abd46a.js";import"./GeometryUtils-c0b70e7a.js";import"./heatmapUtils-4d2d0318.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-6eeb39a0.js";import"./featureConversionUtils-e3ead996.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-d8e143e9.js";import"./ExpandedCIM-f141c63e.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-a5b7ee22.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-a6250cfb.js";import"./floatRGBA-fd2f572d.js";import"./clusterUtils-937e2dd4.js";import"./SizeVariable-d8ab9216.js";import"./colorRamps-6126e357.js";import"./LegendOptions-17fd4751.js";import"./lengthUtils-889f6edb.js";import"./util-2b84b6a1.js";import"./TileContainer-2065d03b.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-58fe578b.js";import"./normalizeUtilsCommon-7af058c9.js";import"./normalizeUtilsSync-fb58072a.js";import"./projectionSupport-73a44dfa.js";import"./json-48e3ea08.js";import"./Matcher-b0468550.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-03669d02.js";import"./LRUCache-aabaf9b5.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-47c8baef.js";import"./webStyleSymbolUtils-514d6e14.js";import"./ComputedAttributeStorage-944c37ed.js";import"./FieldsIndex-d60bbdb3.js";import"./arcadeTimeUtils-748560e8.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(m);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([g()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const bi=e;export{bi as default};

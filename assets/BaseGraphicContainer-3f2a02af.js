import{jz as j,jA as _,jB as A,jC as f,jD as R,jE as v,jF as D,jG as E,jH as O,jI as C,jJ as $,jK as L,ho as N,jL as I,h as g,jM as p,f as S,aH as F,jN as T}from"./index-3572d442.js";import{o as w}from"./FeatureContainer-b839d6c2.js";import{e as H}from"./color-5d593af9.js";const P=Math.PI/180,U=4;class k extends j{constructor(t){super(),this._program=null,this._vao=null,this._vertexBuffer=null,this._indexBuffer=null,this._dvsMat3=_(),this._localOrigin={x:0,y:0},this._getBounds=t}destroy(){this._vao&&(this._vao.dispose(),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program=A(this._program)}doRender(t){const{context:e}=t,s=this._getBounds();if(s.length<1)return;this._createShaderProgram(e),this._updateMatricesAndLocalOrigin(t),this._updateBufferData(e,s),e.setBlendingEnabled(!0),e.setDepthTestEnabled(!1),e.setStencilWriteMask(0),e.setStencilTestEnabled(!1),e.setBlendFunction(f.ONE,f.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0);const o=this._program;e.bindVAO(this._vao),e.useProgram(o),o.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),e.gl.lineWidth(1),e.drawElements(R.LINES,8*s.length,v.UNSIGNED_INT,0),e.bindVAO()}_createTransforms(){return{dvs:_()}}_createShaderProgram(t){if(this._program)return;const e=`precision highp float;
        uniform mat3 u_dvsMat3;

        attribute vec2 a_position;

        void main() {
          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);
          gl_Position = vec4(pos.xy, 0.0, 1.0);
        }`,s=`precision mediump float;
      void main() {
        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);
      }`;this._program=t.programCache.acquire(e,s,m().attributes)}_updateMatricesAndLocalOrigin(t){const{state:e}=t,{displayMat3:s,size:o,resolution:d,pixelRatio:a,rotation:n,viewpoint:i}=e,h=P*n,{x:r,y}=i.targetGeometry,B=D(r,e.spatialReference);this._localOrigin.x=B,this._localOrigin.y=y;const c=a*o[0],u=a*o[1],M=d*c,b=d*u,l=E(this._dvsMat3);O(l,l,s),C(l,l,$(c/2,u/2)),L(l,l,N(o[0]/M,-u/b,1)),I(l,l,-h)}_updateBufferData(t,e){const{x:s,y:o}=this._localOrigin,d=2*U*e.length,a=new Float32Array(d),n=new Uint32Array(8*e.length);let i=0,h=0;for(const r of e)r&&(a[2*i]=r[0]-s,a[2*i+1]=r[1]-o,a[2*i+2]=r[0]-s,a[2*i+3]=r[3]-o,a[2*i+4]=r[2]-s,a[2*i+5]=r[3]-o,a[2*i+6]=r[2]-s,a[2*i+7]=r[1]-o,n[h]=i+0,n[h+1]=i+3,n[h+2]=i+3,n[h+3]=i+2,n[h+4]=i+2,n[h+5]=i+1,n[h+6]=i+1,n[h+7]=i+0,i+=4,h+=8);if(this._vertexBuffer?this._vertexBuffer.setData(a.buffer):this._vertexBuffer=g.createVertex(t,p.DYNAMIC_DRAW,a.buffer),this._indexBuffer?this._indexBuffer.setData(n):this._indexBuffer=g.createIndex(t,p.DYNAMIC_DRAW,n),!this._vao){const r=m();this._vao=new S(t,r.attributes,r.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}}const m=()=>H("bounds",{geometry:[{location:0,name:"a_position",count:2,type:v.FLOAT}]});let V=class extends w{constructor(t){super(t),this.checkHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer=F(this._boundsRenderer)}enableRenderingBounds(t){this._boundsRenderer=new k(t),this.requestRender()}get hasHighlight(){return this.checkHighlight()}onTileData(t,e){t.patch(e),this.contains(t)||this.addChild(t),this.requestRender()}onTileError(t){t.clear(),this.contains(t)||this.addChild(t)}_renderChildren(t,e){for(const s of this.children)s.isReady&&s.hasData&&(s.commit(t),t.context.setStencilFunction(T.EQUAL,s.stencilRef,255),s.getDisplayList().replay(t,s,e))}};export{V as i};

import{h,g,k as i}from"./euclideanAreaMeasurementUtils-cd2006f6.js";import{nn as q,dw as $,de as d,no as m,eS as b}from"./index-3572d442.js";import{l as s}from"./unitFormatUtils-0cfdbae8.js";import{geodesicArea as k}from"./geometryEngine-e6870974.js";import{r as y}from"./automaticLengthMeasurementUtils-3250fa9a.js";function M({hasZ:r,spatialReference:n,rings:e},o,u=0){const a=q(n);if(a==null)return!1;const p=r?t=>t:t=>$(R,t[0],t[1],u);for(const t of e){const c=[];for(const l of t){const f=[0,0,u];a(p(l),0,f,0),c.push(f)}o.push(c)}return!0}const R=d();function w(r){const{spatialReference:n}=r;return y(n,G,S,x,r)}function G(r){return s(Math.abs(m([r],"square-meters")[0]),"square-meters")}function S(r){try{return s(Math.abs(k(r,"square-meters")),"square-meters")}catch{return null}}function x(r){const n=[];return M(r,n)?s(Math.abs(m([{type:"polygon",rings:n,spatialReference:b.WGS84}],"square-meters")[0]),"square-meters"):null}function A(r,n,e=i()){if(n==="on-the-ground"){const o=w(r);return o??h(r,e)}return g(r,e)}function B(r,n=i()){return A(r,"on-the-ground",n)}export{A as o,B as u};

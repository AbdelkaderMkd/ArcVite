import{d8 as w,i9 as b,ij as F,i8 as v,ie as O}from"./index-3572d442.js";import{b as G,n as g}from"./cimAnalyzer-150a8296.js";import{CIMSymbolRasterizer as R}from"./CIMSymbolRasterizer-8f1198ed.js";import"./BidiEngine-9a40f2f4.js";import"./labelPoint-bb8bc683.js";import"./GeometryUtils-984e8446.js";import"./alignmentUtils-ae955d28.js";import"./definitions-f926d1a5.js";import"./number-e491b09e.js";import"./Rect-ea14f53a.js";import"./CIMResourceManager-3b5ecd4d.js";import"./Rasterizer-0aad8952.js";import"./rasterizingUtils-5eb53e8f.js";const p=new R(null,!0),u=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),V=1;async function $(a,e,r){const i=e==null?void 0:e.size;let t=i!=null&&typeof i=="object"&&"width"in i?i.width:i,n=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(t==null||n==null)if(r==="esriGeometryPolygon")t=u,n=u;else{const l=await q(a,e,r);l&&(t=l.width,n=l.height),r==="esriGeometryPolyline"&&(t=C),t=t!=null&&isFinite(t)?Math.min(t,S):u,n=n!=null&&isFinite(n)?Math.max(Math.min(n,S),V):u}return e.style==="legend"&&r==="esriGeometryPolyline"&&(t=C),{width:t,height:n}}async function q(a,e,r){const{feature:i,fieldMap:t,viewParams:n}=e.cimOptions||e,l=await G.resolveSymbolOverrides(a.data,i,null,t,r,null,n);if(!l)return null;(a=a.clone()).data={type:"CIMSymbolReference",symbol:l},a.data.primitiveOverrides=void 0;const o=[];return g.fetchResources(l,p.resourceManager,o),g.fetchFonts(l,p.resourceManager,o),o.length>0&&await Promise.all(o),g.getEnvelope(l,null,p.resourceManager)}async function X(a,e={}){var M;const{node:r,opacity:i,symbolConfig:t}=e,n=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,l=e.cimOptions||e,o=l.geometryType||F((M=a==null?void 0:a.data)==null?void 0:M.symbol),h=await $(a,e,o),{feature:P,fieldMap:I}=l,L=n||o!=="esriGeometryPolygon"?"preview":"legend",y=await p.rasterizeCIMSymbolAsync(a,P,h,L,I,o,null,l.viewParams,l.allowScalingUp);if(!y)return null;const{width:j,height:x}=y,m=document.createElement("canvas");m.width=j,m.height=x,m.getContext("2d").putImageData(y,0,0);const f=v(h.width),d=v(h.height),s=new Image(f,d);s.src=m.toDataURL(),s.ariaLabel=e.ariaLabel??null,s.alt=e.ariaLabel??"",i!=null&&(s.style.opacity=`${i}`);let c=s;if(e.effectView!=null){const z={shape:{type:"image",x:0,y:0,width:f,height:d,src:s.src},fill:null,stroke:null,offset:[0,0]};c=O([[z]],[f,d],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return r&&c&&r.appendChild(c),c}export{X as previewCIMSymbol};

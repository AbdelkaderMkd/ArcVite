import{aE as S,eS as k,de as c,dw as x,e3 as b,e2 as v,fs as y,ft as z,e1 as M,fu as p,dI as E,fv as m,fw as P,fx as h,dV as g,fy as w,dZ as G,fz as q}from"./index-3572d442.js";import{geodesicArea as R}from"./geometryEngine-e6870974.js";function A(t,e){const n=e.center;x(n,0,0,0);for(let r=0;r<t.length;++r)b(n,n,t[r]);v(n,n,1/t.length);let f=0;for(let r=0;r<t.length;++r)f=Math.max(f,y(n,t[r]));e.radius=Math.sqrt(f)}function C(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");z(t[0],t[1],t[2],e)}function I(t,e){return M(t,e)+t[3]}function L(t,e,n){return p(t,u,n)&&p(e,i,n)?E(u,i):0}function U(t,e){if(!m(t,u)||!m(e,i))return 0;const n=new q;return P(n,[u[0],u[1]],[i[0],i[1]]),n.distance}function V(t,e,n){const f=new q;return P(f,[t[0],t[1]],[e[0],e[1]],n),f.distance}function Z(t,e,n,f){const r=T;return h(t,f,u)&&h(e,f,i)&&h(n,f,d)?(r.setPoint(0,0,u),r.setPoint(0,1,i),r.setPoint(0,2,d),Math.abs(R(r,"square-meters"))):0}function _(t,e=null,n=!0){const r=(a,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let l=0;l<a.length;++l)if(M(o,a[l])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&g(e,t[0]),!0;x(s,0,0,0);for(let a=0;a<t.length;++a)b(s,s,t[a]);if(w(s,s),r(t,s))return e&&g(e,s),!0;if(!n)return!1;for(let a=0;a<t.length;++a)for(let o=0;o<t.length;++o)if(a!==o&&(G(s,t[a],t[o]),w(s,s),r(t,s)))return e&&g(e,s),!0;return!1}function B(t){return t.pointerType!=="mouse"||t.button===0}const u=c(),i=c(),d=c(),T=new S({rings:[[u,i,d]],spatialReference:k.WGS84}),s=c();export{Z as G,L,_ as M,U as S,V as T,B as W,A as b,C as d,I as w};

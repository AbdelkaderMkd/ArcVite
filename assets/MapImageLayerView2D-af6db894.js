import{a as o,b as p,c as m,i as g,d as l,s as d,l as u}from"./index-694ce44d.js";import{a as c}from"./BitmapContainer-98d80e92.js";import{f as y,d as f}from"./LayerView-0c3abff6.js";import{o as x}from"./GraphicsView2D-5322468e.js";import{n as w}from"./HighlightGraphicContainer-aa7d271a.js";import{v}from"./ExportStrategy-7da0dfba.js";import{b as _}from"./commonProperties-2fd36cd6.js";import{m as H}from"./ExportImageParameters-7204b089.js";import{a as I}from"./RefreshableLayerView-622fb2f0.js";import{U,r as V}from"./drapedUtils-8ab880d9.js";import"./WGLContainer-8c37a38c.js";import"./definitions-a76b7e9e.js";import"./VertexArrayObject-51fe5775.js";import"./Texture-de2922f0.js";import"./enums-b14466b3.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-807fab76.js";import"./enums-f1a6a48a.js";import"./ProgramTemplate-6419e6e4.js";import"./GeometryUtils-c90a4bf4.js";import"./heatmapUtils-c03ab930.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./Container-98784fc3.js";import"./parser-efb788bb.js";import"./earcut-25af7c0e.js";import"./featureConversionUtils-0828833d.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./ExpandedCIM-77060c38.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-f5aaa5be.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-d5ac8a7f.js";import"./floatRGBA-1cdb5626.js";import"./normalizeUtilsSync-9066bce3.js";import"./normalizeUtilsCommon-85cfc130.js";import"./projectionSupport-657658d1.js";import"./json-48e3ea08.js";import"./LabelClass-1bdf648f.js";import"./labelUtils-9d1c424f.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-6cf6afd3.js";import"./AttributeStoreView-4542327c.js";import"./TiledDisplayObject-a6540d9f.js";import"./diffUtils-a329eb07.js";import"./labelingInfo-ea1763c0.js";import"./visualVariablesUtils-a4775b4a.js";import"./clusterUtils-2a049c35.js";import"./SizeVariable-f2e14e5f.js";import"./colorRamps-c91442f9.js";import"./LegendOptions-457bb874.js";import"./lengthUtils-ee5fce51.js";import"./util-2693a291.js";import"./Matcher-a8074a44.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-3f03f801.js";import"./LRUCache-962ebf1b.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-fadc7778.js";import"./webStyleSymbolUtils-ff0ff2ec.js";import"./ComputedAttributeStorage-cfc9b782.js";import"./FieldsIndex-c27e2366.js";import"./arcadeTimeUtils-63972b50.js";import"./executionError-c92d3b85.js";import"./normalizeUtils-02a847e9.js";import"./BaseGraphicContainer-567f458d.js";import"./FeatureContainer-378ec050.js";import"./TileContainer-8ad69116.js";import"./vec3f32-ad1dc57f.js";import"./Bitmap-c7a69538.js";import"./ElevationInfo-88d880d6.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-5b1b7b1d.js";import"./popupUtils-9a09e3b4.js";const P=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var e;return!!super.canResume()&&!((e=this.timeExtent)!=null&&e.isEmpty)}};return o([p()],i.prototype,"exportImageParameters",void 0),o([p({readOnly:!0})],i.prototype,"floors",null),o([p({readOnly:!0})],i.prototype,"exportImageVersion",null),o([p()],i.prototype,"layer",void 0),o([p()],i.prototype,"suspended",void 0),o([p(_)],i.prototype,"timeExtent",void 0),i=o([m("esri.views.layers.MapImageLayerView")],i),i};let a=class extends P(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,e=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new U({createFetchPopupFeaturesQueryGeometry:(s,h)=>V(s,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,h)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:e,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,e){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}fetchImageBitmap(t,i,r,e){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}highlight(t){return this._popupHighlightHelper.highlight(t)}};o([p()],a.prototype,"strategy",void 0),o([p()],a.prototype,"updating",void 0),a=o([m("esri.views.2d.layers.MapImageLayerView2D")],a);const Kt=a;export{Kt as default};

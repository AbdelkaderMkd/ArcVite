import{eY as m,aO as p,b9 as n,aQ as i,aR as o,ec as l,aT as d}from"./index-383689b1.js";import{x as h}from"./I3SMeshView3D-9025938a.js";import{n as c}from"./LayerView3D-80043e5c.js";import{d as u}from"./LayerView-fd5dbfea.js";import"./I3SOverrides-a2f30629.js";import"./I3SNode-f641f2fc.js";import"./I3SUtil-624f6882.js";import"./I3SBinaryReader-ec9d03dc.js";import"./meshFeatureSet-1fc499ec.js";import"./Mesh-4fae1347.js";import"./MeshGeoreferencedRelativeVertexSpace-be9e8612.js";import"./MeshLocalVertexSpace-c545ba83.js";import"./MeshTransform-1edc7c1e.js";import"./georeference-104df20c.js";import"./External-ad35fd1c.js";import"./FeatureLayerView3D-e5c77cba.js";import"./FeatureLayerViewBase3D-a38d4496.js";import"./FeatureLikeLayerView3D-56ecbb88.js";import"./dehydratedFeatureComparison-0846371a.js";import"./queryForSymbologySnapping-93d4bbbb.js";import"./hash-6f442295.js";import"./Graphics3DScaleVisibility-e79898ef.js";import"./rendererConversion-c535010a.js";import"./optimizedFeatureQueryEngineAdapter-7d44cdc4.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-b9492410.js";import"./popupUtils-98519cca.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-3e280689.js";import"./WhereClause-607d84ad.js";import"./projectionSupport-2845339d.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-17b4ba19.js";import"./utils-b05825b7.js";import"./generateRendererUtils-d9d01019.js";import"./FeatureStore-58899971.js";import"./BoundsStore-9a1c79d1.js";import"./heatmapTextureUtils-dfcf9845.js";import"./projectExtentUtils-e5907907.js";import"./query-3e31e3f5.js";import"./pbfQueryUtils-394408b5.js";import"./pbf-1f7c5ba7.js";import"./EventedSet-7bbe089b.js";import"./FeatureLayerView-bd2a521c.js";import"./RefreshableLayerView-344b5884.js";import"./SceneModification-742a9fb7.js";import"./persistable-ff1293bf.js";import"./resourceExtension-3683de57.js";import"./SceneLayerWorker-21ca0461.js";const g=.2;let r=class extends h(c(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,e,a,s;return((s=(a=(e=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:e.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new n;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o()],r.prototype,"i3slayer",null),i([o(l)],r.prototype,"updatingProgress",void 0),i([o()],r.prototype,"updatingProgressValue",null),i([o()],r.prototype,"lodFactor",null),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const ht=r;export{ht as default};

import{aH as n,aO as g,aQ as d,aL as l,aM as u,aA as s,aB as o,aD as c}from"./index-80114339.js";import{a as f}from"./BitmapContainer-5475926e.js";import{f as y}from"./LayerView2D-5137fb8f.js";import{o as H}from"./GraphicsView2D-57b184b4.js";import{n as _}from"./HighlightGraphicContainer-f88c4340.js";import{v as w}from"./ExportStrategy-f3ee91b7.js";import{d as v}from"./LayerView-76d3ea4d.js";import{p as x}from"./MapImageLayerView-457a9055.js";import{a as U}from"./RefreshableLayerView-814db235.js";import{U as $}from"./MapServiceLayerViewHelper-cab26bde.js";import"./WGLContainer-fdf8893b.js";import"./definitions-e92533c5.js";import"./WGLBrushVTLSymbol-1237c1e5.js";import"./enums-b1d611e3.js";import"./number-e491b09e.js";import"./GeometryUtils-dd03fc25.js";import"./color-7e8a87bb.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-2d71a099.js";import"./MaterialKey-9578aace.js";import"./alignmentUtils-ae955d28.js";import"./heatmapTextureUtils-31d66305.js";import"./Container-5de58e03.js";import"./EffectView-5c6d1913.js";import"./cimAnalyzer-f75e8982.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./normalizeUtilsSync-5bb846cd.js";import"./normalizeUtilsCommon-b32fe8bd.js";import"./projectionSupport-6bece704.js";import"./json-48e3ea08.js";import"./AttributeStoreView-6a46204f.js";import"./visualVariablesUtils-cc76e916.js";import"./ExpandedCIM-6447fec2.js";import"./util-143ef882.js";import"./Matcher-a20aa6a5.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-f6270054.js";import"./ComputedAttributeStorage-d3d7f802.js";import"./arcadeTimeUtils-073ac556.js";import"./centroid-8e8cfa47.js";import"./normalizeUtils-293ed7d1.js";import"./BaseGraphicContainer-0dde8662.js";import"./FeatureContainer-a8965b53.js";import"./TileContainer-305473f1.js";import"./Bitmap-919f2523.js";import"./ExportImageParameters-860b7278.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-bcde78ab.js";import"./popupUtils-bf6e958a.js";let a=class extends x(U(y(v))){constructor(){super(...arguments),this._highlightGraphics=new n,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{g(e)||d.getLogger(this).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,r=e>=10.3,m=e>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new $({createFetchPopupFeaturesQueryGeometry:(p,h)=>l(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new w({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:r,imageNormalizationSupported:m,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,r){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}fetchImageBitmap(t,i,e,r){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}highlight(t){return this._popupHighlightHelper.highlight(t)}};s([o()],a.prototype,"strategy",void 0),s([o()],a.prototype,"updating",void 0),a=s([c("esri.views.2d.layers.MapImageLayerView2D")],a);const xt=a;export{xt as default};
